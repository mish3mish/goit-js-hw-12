import{a as f,i as m,S as h}from"./assets/vendor-D73Uttp0.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function i(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(t){if(t.ep)return;t.ep=!0;const s=i(t);fetch(t.href,s)}})();async function y(e,r=1){const i=new URLSearchParams({key:"47046376-5398f80f14019d8274a22c320",q:e,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:15,page:r});return(await f.get(`https://pixabay.com/api/?${i}`)).data}function L(e){return e.map(({webformatURL:r,largeImageURL:i,tags:a,likes:t,views:s,comments:o,downloads:g})=>`
      <li class="gallery-item">
        <a href="${i}" class="gallery-item-link">
        <img src="${r}" alt="${a}" class="gallery-item-img" />
        <div class="gallery-item-content">
        <p class="gallery-item-description">Likes<span> ${t}</span></p>
        <p class="gallery-item-description">Views<span> ${s}</span></p>
        <p class="gallery-item-description">Comments<span> ${o}</span></p>
        <p class="gallery-item-description">Downloads<span> ${g}</span></p>
        </div>
        </a>
      </li>
      `).join("")}const p=document.querySelector(".gallery"),b=document.querySelector(".form"),l=document.querySelector(".loader"),d=document.querySelector(".load-more-btn");let n=1,c="";b.addEventListener("submit",v);d.addEventListener("click",w);async function v(e){if(e.preventDefault(),c=e.target.search.value.trim(),console.log(c),!c){m.error({message:"The field cannot be empty!",position:"topRight"});return}n=1,p.innerHTML="",d.classList.add("is-hidden"),l.classList.remove("is-hidden"),l.classList.add("is-active"),await u()}async function u(){try{const e=await y(c,n);if(e.totalHits===0){m.error({message:"Sorry, there are no images matching your search query. Please, try again!",position:"topRight"});return}p.insertAdjacentHTML("beforeend",L(e.hits)),new h(".gallery a",{captionsData:"alt",captionDelay:250}).refresh(),e.hits.length===15&&e.totalHits>n*15?d.classList.remove("is-hidden"):(d.classList.add("is-hidden"),m.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight"})),S()}catch(e){console.log(e.message)}finally{l.classList.remove("is-active"),l.classList.add("is-hidden")}}async function w(){n+=1,await u()}function S(){const e=document.querySelector(".gallery-item");if(e){const i=e.getBoundingClientRect().height;n>1&&setTimeout(()=>{window.scrollBy({top:i*2,behavior:"smooth"})},300)}}
//# sourceMappingURL=index.js.map
